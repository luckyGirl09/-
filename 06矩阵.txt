特殊矩阵的压缩存储

矩阵的常见存储方式：多维数组
特点：可以对其元素进行随机存取

矩阵的压缩存储：为多个相同的非零元素只分配一个存储空间，对零元素不分配空间
稀疏矩阵的定义：矩阵中非零元素的个数较少

1.对称矩阵
在n*n的矩阵中，aij = aji(i>=1,j<=n)，
只存储上三角或下三角（包括主对角线）的元素。一共占用n*(n+1)/2个元素
存放在一维数组中，以行序为主，aij的元素下标k为  i*(i-1)/2 + j - 1

2.三角矩阵
对角线以上或者以下（不包括主对角线）的元素全部为常数c，
重复元素c共享一个空间，共占用  n*(n+1)/2 +1个空间
  上三角矩阵：上边都是重复元素
i<=j时     k = (i-1)*(2n-i+2)/2+j-i+1
i>j时        k = n(n+1)/2 +1
  下三角矩阵：下边都是重复元素
i>=j时     k = i*(i-1)/2+j
i<j时        k = n*(n+1)/2+j

3.对角矩阵
所有非零元素都集中在以主对角线为中心的带状区域中，区域外的值全为0
用二维数组存储，每一条对角线上的元素放在一行

4.稀疏矩阵：用三元组表示
i:行号   j:列号  v:值
（i,j,v）

还可以用十字链表表示
//十字链表的定义
typedef struct OLNode
{
	int row, col;
	ElemType e;
	struct OLNode *right, *down;		//同一行、同一列中的下一个非零元素
}OLNode, *OLink;

typedef struct
{
	OLink *row_head, *col_head;		//指向指针的指针，当作数组来用
	int m, n, len;		//矩阵的行数、列数、非零元素的个数
}CrossList;






